{"version":3,"sources":["../server/server.js"],"names":["SourceMapSupport","install","app","use","express","static","bodyParser","json","get","req","res","db","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","status","message","post","newIssue","body","created","Date","err","Issue","validateIssue","insertOne","result","_id","insertedId","limit","next","MongoClient","connect","connection","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AACAA,2BAAiBC,OAAjB;AACA;AACA;AACA,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQC,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAH,IAAIC,GAAJ,CAAQG,qBAAWC,IAAX,EAAR;;AAEAL,IAAIM,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpCC,IAAGC,UAAH,CAAc,QAAd,EAAwBC,IAAxB,GAA+BC,OAA/B,GAAyCC,IAAzC,CAA8CC,UAAU;AACvD,QAAMC,WAAW,EAACC,aAAaF,OAAOG,MAArB,EAAjB;AACAT,MAAIH,IAAJ,CAAS,EAACa,WAAWH,QAAZ,EAAsBI,SAASL,MAA/B,EAAT;AACA,EAHD,EAGGM,KAHH,CAGSC,SAAS;AACjBC,UAAQC,GAAR,CAAYF,KAAZ;AACAb,MAAIgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAACoB,SAAU,yBAAwBJ,KAAM,EAAzC,EAArB;AACA,EAND;AAOA,CARD;;AAWA;;;AAGArB,IAAI0B,IAAJ,CAAS,aAAT,EAAuB,CAACnB,GAAD,EAAMC,GAAN,KAAc;AACpC,OAAMmB,WAAWpB,IAAIqB,IAArB;AACA;AACA;AACAD,UAASE,OAAT,GAAmB,IAAIC,IAAJ,EAAnB;AACA,KAAI,CAACH,SAASH,MAAd,EAAsB;AACrBG,WAASH,MAAT,GAAkB,KAAlB;AACA;AACD,OAAMO,MAAMC,gBAAMC,aAAN,CAAoBN,QAApB,CAAZ;AACA,KAAII,GAAJ,EAAS;AACRvB,MAAIgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAACoB,SAAU,oBAAmBM,GAAI,EAAlC,EAArB;AACA;AACA;AACDtB,IAAGC,UAAH,CAAc,QAAd,EAAwBwB,SAAxB,CAAkCP,QAAlC,EAA4Cd,IAA5C,CAAiDsB,UAAU;AAC1D1B,KAAGC,UAAH,CAAc,QAAd,EAAwBC,IAAxB,CAA6B,EAACyB,KAAKD,OAAOE,UAAb,EAA7B,EAAuDC,KAAvD,CAA6D,CAA7D,EAAgEC,IAAhE;AACA,EAFD,EAEG1B,IAFH,CAEQc,YAAY;AACnBnB,MAAIH,IAAJ,CAASsB,QAAT;AACA,EAJD,EAIGP,KAJH,CAISC,SAAS;AACjBC,UAAQC,GAAR,CAAYF,KAAZ;AACAb,MAAIgB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAACoB,SAAU,0BAAyBJ,KAAM,EAA1C,EAArB;AACA,EAPD;AAQA;AACA;AACA,CAvBD;;AAyBA;;AAEA,IAAIZ,EAAJ;AACA+B,qBAAYC,OAAZ,CAAoB,kCAApB,EAAwD5B,IAAxD,CAA6D6B,cAAc;AAC1EjC,MAAKiC,WAAWjC,EAAX,CAAc,cAAd,CAAL;AACAT,KAAI2C,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACtBrB,UAAQC,GAAR,CAAY,0BAAZ;AACA,EAFD;AAGA,CALD,EAKGH,KALH,CAKSC,SAAS;AACjBC,SAAQC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACA,CAPD","file":"server.js","sourcesContent":["import express from \"express\";\nimport bodyParser from 'body-parser';\nimport 'babel-polyfill';\nimport { MongoClient } from 'mongodb';\nimport Issue from './issue.js'\nimport SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\n// console.log(keys.mongoURI);\n// mongoose.connect(keys.mongoURI);\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\napp.get('/api/issues', (req, res) => {\n\tdb.collection('issues').find().toArray().then(issues => {\n\t\tconst metadata = {total_count: issues.length};\n\t\tres.json({_metadata: metadata, records: issues});\n\t}).catch(error => {\n\t\tconsole.log(error);\n\t\tres.status(500).json({message: `Internal Server error ${error}` });\n\t});\n});\n\n\n//this two objects define what is the valid object \"issue\"\n\n\napp.post('/api/issues',(req, res) => {\n\tconst newIssue = req.body;\n\t//we don't need this one anymore\n\t//newIssue.id = issues.length + 1;\n\tnewIssue.created = new Date();\n\tif (!newIssue.status) {\n\t\tnewIssue.status = \"New\";\n\t}\n\tconst err = Issue.validateIssue(newIssue)\n\tif (err) {\n\t\tres.status(422).json({message: `Invalid request: ${err}` });\n\t\treturn;\n\t}\n\tdb.collection('issues').insertOne(newIssue).then(result => {\n\t\tdb.collection('issues').find({_id: result.insertedId}).limit(1).next()\n\t}).then(newIssue => {\n\t\tres.json(newIssue);\n\t}).catch(error => {\n\t\tconsole.log(error);\n\t\tres.status(500).json({message: `Internal Server Error: ${error}` });\n\t});\n\t// issues.push(newIssue);\n\t// res.json(newIssue);\n});\n\n//throw new Error(\"TEST!!!\");\n\nlet db;\nMongoClient.connect('mongodb://localhost/IssueTracker').then(connection => {\n\tdb = connection.db('IssueTracker');\n\tapp.listen(3000, () => {\n\t\tconsole.log(\"App started on port 3000\");\n\t});\t\n}).catch(error => {\n\tconsole.log('ERROR:', error);\n});\n\n"]}