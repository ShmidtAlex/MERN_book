{"version":3,"sources":["../server/server.js"],"names":["_sourceMapSupport","require","_sourceMapSupport2","_interopRequireDefault","_express","_express2","_bodyParser","_bodyParser2","_mongodb","_issue","_issue2","_renderedPageRouter","_renderedPageRouter2","obj","__esModule","default","install","app","use","static","json","db","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","message","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","_id","insertedId","limit","next","savedIssue","issueId","params","id","ObjectId","issue","put","updateOne","convertIssue","delete","deleteOne","deleteResult","n","MongoClient","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["'use strict';\n\nvar _sourceMapSupport = require('source-map-support');\n\nvar _sourceMapSupport2 = _interopRequireDefault(_sourceMapSupport);\n\nrequire('babel-polyfill');\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _mongodb = require('mongodb');\n\nvar _issue = require('./issue.js');\n\nvar _issue2 = _interopRequireDefault(_issue);\n\nvar _renderedPageRouter = require('./renderedPageRouter.jsx');\n\nvar _renderedPageRouter2 = _interopRequireDefault(_renderedPageRouter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_sourceMapSupport2.default.install(); //# sourceMappingURL=server.js.map\n\n//import mongodb driver features\n\n\n//create express instance\nvar app = (0, _express2.default)();\n//using middleware static, show that static files placed in 'static' folder\napp.use(_express2.default.static('static'));\n//create and mount bodyParser middleware, which helps to parse .json file \n//to simple object, at the application level\napp.use(_bodyParser2.default.json());\n//create global variable for mongoDB connection\nvar db = void 0;\n\n//this API is designed for finding issues by filter\n//'/api' is a prefix, which shows that issues is an API, it's not path\napp.get('/api/issues', function (req, res) {\n  var filter = {}; //by default filter is empty object\n  if (req.query.status) {\n    //if in parsed query string from request from client there is any status,\n    //now filter's status is equal to status from parsed query string\n    filter.status = req.query.status;\n  }\n  if (req.query.effort_lte || req.query.effort_gte) {\n    filter.effort = {};\n  }\n  if (req.query.effort_lte) {\n    filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  }\n  if (req.query.effort_gte) {\n    filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n  }\n  //any collection in mongo DB has method 'collection', which allows us supply the name\n  //of collection (issues in this case), to indicate exactly which collection from data base\n  db.collection('issues').find(filter).toArray().then(function (issues) {\n    //returning document given by find(filter) method \n    var metadata = { total_count: issues.length };\n    res.json({ _metadata: metadata, records: issues });\n  }).catch(function (error) {\n    console.log(error);\n    res.status(500).json({ message: 'Internal Server error ' + error });\n  });\n});\n\n//this API is designed for creating new 'issues'\n//.post creates an object which is supplied from the body\napp.post('/api/issues', function (req, res) {\n  //req.body containts the body of created new issue, it's valid for post \n  //NOTE: req.body will be undefined, if there is no middleware (bodyParser f.e.x) for interpret\n  var newIssue = req.body;\n  newIssue.created = new Date(); //because of we have no filed for setting date, we assign it here\n  //if created issue doesn't have any status from user initally, assign status 'New'\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n  var err = _issue2.default.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: 'Invalid request: ' + err });\n    return;\n  }\n  //insert newIssue variable, which contains created issue to data base\n  //before insert validate newIssue by cleanupIssue function from imported Issue variable\n  db.collection('issues').insertOne(_issue2.default.cleanupIssue(newIssue)).then(function (result) {\n    return (\n      //while it's inserting, it gets new id, which stored in property insertedId\n      db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\n    );\n  }).then(function (savedIssue) {\n    res.json(savedIssue);\n  }).catch(function (error) {\n    console.log(error);\n    res.status(500).json({ message: 'Internal Server Error: ' + error });\n  });\n});\n\napp.get('/api/issues/:id', function (req, res) {\n  var issueId = void 0;\n  console.log(req.params.id);\n  try {\n    issueId = new _mongodb.ObjectId(req.params.id); //for using ObjectId() you need import it from mongodb\n  } catch (error) {\n    res.status(422).json({ message: 'Invalid issue ID format : ' + error });\n    return;\n  }\n  db.collection('issues').find({ _id: issueId }).limit(1).next().then(function (issue) {\n    if (!issue) {\n      res.status(404).json({ message: 'No such issue: ' + issueId });\n    } else {\n      res.json(issue);\n    }\n  }).catch(function (error) {\n    console.log(error);\n    res.status(500).json({ message: 'Internal Server Error: ' + error });\n  });\n});\n//Update API\napp.put('/api/issues/:id', function (req, res) {\n  var issueId = void 0;\n  try {\n    issueId = new _mongodb.ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: 'Invalid issue ID format: ' + error });\n    return;\n  }\n  var issue = req.body;\n  delete issue._id;\n  var err = _issue2.default.validateIssue(issue);\n  if (err) {\n    res.status(422).json({ message: 'Invalid request: ' + err });\n    return;\n  }\n  db.collection('issues').updateOne({ _id: issueId }, _issue2.default.convertIssue(issue)).then(function () {\n    return db.collection('issues').find({ _id: issueId }).limit(1).next();\n  }).then(function (savedIssue) {\n    res.json(savedIssue);\n  }).catch(function (error) {\n    console.log(error);\n    res.status(500).json({ message: 'Internal Server Error: ' + error });\n  });\n});\n//delete API:\napp.delete('/api/issues/:id', function (req, res) {\n  var issueId = void 0;\n  try {\n    issueId = new _mongodb.ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: 'Invalid issue ID format: ' + error });\n    return;\n  }\n  db.collection('issues').deleteOne({ _id: issueId }).then(function (deleteResult) {\n    if (deleteResult.result.n === 1) {\n      res.json({ status: \"OK\" });\n    } else {\n      res.json({ status: \"Warning: object not found\" });\n    }\n  }).catch(function (error) {\n    console.log(error);\n    res.status(500).json({ message: 'Internal server error: ' + error });\n  });\n});\napp.use('/', _renderedPageRouter2.default);\n//MongoClient is an object provided by mongodb module, allows us act as a client\n//'connect' method connecting the database from Node.js\n_mongodb.MongoClient.connect('mongodb://localhost/IssueTracker').then(function (connection) {\n  //assign our connection with mongo database (called IssueTracker) to global varibale db\n  db = connection.db('IssueTracker');\n  app.listen(3000, function () {\n    //start express server after getting connection\n    console.log(\"App started on port 3000\");\n  });\n}).catch(function (error) {\n  console.log('ERROR:', error);\n});\n//returning one and only one real page in our SPA for avoid situation, when router\n//can't find correct path /api/issues,(instead it find /issues) \n//after hitting 'reload' button in browser/ it also affects webpack.config 'historyApiFallback'\n//# sourceMappingURL=server.js.map"]}