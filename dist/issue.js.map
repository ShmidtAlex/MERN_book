{"version":3,"sources":["../server/issue.js"],"names":["validIssueStatus","New","Open","Assigned","Fixed","Verified","Closed","issueFieldType","status","owner","effort","created","completionDate","title","cleanupIssue","issue","cleanedUpIssue","Object","keys","forEach","field","validateIssue","errors","push","length","join","convertIssue","Date"],"mappings":";;;;;;AACA,IAAMA,mBAAmB;AACxBC,OAAK,IADmB;AAExBC,QAAM,IAFkB;AAGxBC,YAAU,IAHc;AAIxBC,SAAO,IAJiB;AAKxBC,YAAU,IALc;AAMxBC,UAAQ;AANgB,CAAzB;AAQA,IAAMC,iBAAiB;AACtBC,UAAQ,UADc;AAEtBC,SAAO,UAFe;AAGtBC,UAAQ,UAHc;AAItBC,WAAS,UAJa;AAKtBC,kBAAgB,UALM;AAMtBC,SAAO;AANe,CAAvB;AAQA;AACA;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,iBAAiB,EAAvB;AACEC,SAAOC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,iBAAS;AAClC,QAAIZ,eAAea,KAAf,CAAJ,EAA2B;AACzBJ,qBAAeI,KAAf,IAAwBL,MAAMK,KAAN,CAAxB;AACD;AACF,GAJD;AAKF,SAAOJ,cAAP;AACD;;AAED,SAASK,aAAT,CAAuBN,KAAvB,EAA8B;AAC5B,MAAMO,SAAS,EAAf;AACAL,SAAOC,IAAP,CAAYX,cAAZ,EAA4BY,OAA5B,CAAoC,iBAAS;AAC3C,QAAIZ,eAAea,KAAf,MAA0B,UAA1B,IAAwC,CAACL,MAAMK,KAAN,CAA7C,EAA2D;AACzDE,aAAOC,IAAP,+BAAwCH,KAAxC;AACD;AACF,GAJD;AAKA,MAAI,CAACpB,iBAAiBe,MAAMP,MAAvB,CAAL,EAAoC;AAClCc,WAAOC,IAAP,CAAeR,MAAMP,MAArB;AACD;AACD,SAAQc,OAAOE,MAAP,GAAgBF,OAAOG,IAAP,CAAY,IAAZ,CAAhB,GAAoC,IAA5C;AACD;AACD,SAASC,YAAT,CAAsBX,KAAtB,EAA6B;AAC3B,MAAIA,MAAMJ,OAAV,EAAmB;AACjBI,UAAMJ,OAAN,GAAgB,IAAIgB,IAAJ,CAASZ,MAAMJ,OAAf,CAAhB;AACD;AACD,MAAII,MAAMH,cAAV,EAA0B;AACxBG,UAAMH,cAAN,GAAuB,IAAIe,IAAJ,CAASZ,MAAMH,cAAf,CAAvB;AACD;AACD,SAAOE,aAAaC,KAAb,CAAP;AACD;kBACc;AACbM,8BADa;AAEbP,4BAFa;AAGbY;AAHa,C","file":"issue.js","sourcesContent":["\nconst validIssueStatus = {\n\tNew: true,\n\tOpen: true,\n\tAssigned: true,\n\tFixed: true,\n\tVerified: true,\n\tClosed: true\n};\nconst issueFieldType = {\n\tstatus: \"required\",\n\towner: \"required\",\n\teffort: \"optional\",\n\tcreated: \"required\",\n\tcompletionDate: \"optional\",\n\ttitle: \"required\"\n};\n//validateIssue has to be decoupled to two functions for eslint validation\n//'fucntion parameter reassignment is disallowed'\nfunction cleanupIssue(issue) {\n  const cleanedUpIssue = {};\n    Object.keys(issue).forEach(field => {\n      if (issueFieldType[field]) {\n        cleanedUpIssue[field] = issue[field];\n      }\n    });\n  return cleanedUpIssue;\n}\n\nfunction validateIssue(issue) {\n  const errors = [];\n  Object.keys(issueFieldType).forEach(field => {\n    if (issueFieldType[field] === 'required' && !issue[field]) {\n      errors.push(`Missing mandatory field: ${field}`);\n    }\n  });\n  if (!validIssueStatus[issue.status]){\n    errors.push(`${issue.status} is not a valid status.`);\n  }\n  return (errors.length ? errors.join('; ') : null);\n}\nfunction convertIssue(issue) {\n  if (issue.created) {\n    issue.created = new Date(issue.created);\n  }\n  if (issue.completionDate) {\n    issue.completionDate = new Date(issue.completionDate);\n  }\n  return cleanupIssue(issue);\n}\nexport default {\n  validateIssue,\n  cleanupIssue,\n  convertIssue,\n};"]}