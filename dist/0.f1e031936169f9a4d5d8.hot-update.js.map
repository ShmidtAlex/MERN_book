{"version":3,"sources":["webpack:///./server/renderedPageRouter.jsx?d701","webpack:///external \"react-router\"?ee16"],"names":["renderedPageRouter","Router","get","req","res","routes","location","url","error","redirectLocation","renderProps","status","send","message","redirect","pathname","search","fetch","then","response","json","initialState","data","html","catch","console","log","err"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,KAAMA,qBAAqB,IAAIC,iBAAJ,EAA3B;;AAEAD,oBAAmBE,GAAnB,CAAuB,GAAvB,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxC,2BAAM,EAAEC,wBAAF,EAAUC,UAAUH,IAAII,GAAxB,EAAN,EAAqC,UAACC,KAAD,EAAQC,gBAAR,EAA0BC,WAA1B,EAA0C;AAC7E,SAAIF,KAAJ,EAAW;AACTJ,WAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,MAAMK,OAA3B;AACD,MAFD,MAEO,IAAIJ,gBAAJ,EAAsB;AAC3BL,WAAIU,QAAJ,CAAa,GAAb,EAAkBL,iBAAiBM,QAAjB,GAA4BN,iBAAiBO,MAA/D;AACD,MAFM,MAEA,IAAIN,WAAJ,EAAiB;AACtBO,2CAAkCd,IAAII,GAAtC,EAA6CW,IAA7C,CAAkD;AAAA,gBAAYC,SAASC,IAAT,EAAZ;AAAA,QAAlD,EACCF,IADD,CACM,gBAAQ;AACZ,aAAMG,eAAe,EAAEC,UAAF,EAArB;AACA,aAAMC,OAAO,4BACX;AAAC,mCAAD;AAAA,aAAgB,cAAgBF,YAAhC;AACE,yCAAC,0BAAD,EAAmBX,WAAnB;AADF,UADW,CAAb;AAKAN,aAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAASW,IAAT,EAAeF,YAAf,CAArB;AACD,QATD,EAUCG,KAVD,CAUO,eAAO;AACZC,iBAAQC,GAAR,iCAA0CC,GAA1C;AACD,QAZD;AAaD,MAdM,MAcA;AACNvB,WAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,WAArB;AACA;AACF,IAtBD;AAuBD,EAxBD;mBAyBeZ,kB;;;;;;;ACpCf,0C","file":"0.f1e031936169f9a4d5d8.hot-update.js","sourcesContent":["import React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { match, RouterContext } from 'react-router';\nimport Router from 'express';\n\nimport template from './template.js';\nimport routes from '../src/Routes.jsx';\nimport ContextWrapper from '../src/ContextWrapper.jsx';\n\nconst renderedPageRouter = new Router();\n\nrenderedPageRouter.get('*', (req, res) => {\n  match({ routes, location: req.url }, (error, redirectLocation, renderProps) => {\n    if (error) {\n      res.status(500).send(error.message);\n    } else if (redirectLocation) {\n      res.redirect(302, redirectLocation.pathname + redirectLocation.search);\n    } else if (renderProps) {\n      fetch(`http://localhost:3000/api${req.url}`).then(response =>(response.json()))\n      .then(data => {\n        const initialState = { data };\n        const html = renderToString(\n          <ContextWrapper initialState = {initialState}>\n            <RouterContext {...renderProps} />\n          </ContextWrapper>\n         );\n        res.status(200).send(template(html, initialState));\n      })\n      .catch(err => {\n        console.log(`Error rendering to string: ${err}`);\n      });\n    } else {\n    \tres.status(404).send('Not Found');\n    }\n  });\n});\nexport default renderedPageRouter;\n\n\n// WEBPACK FOOTER //\n// ./server/renderedPageRouter.jsx","module.exports = require(\"react-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router\"\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}